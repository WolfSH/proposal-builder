{"version":3,"sources":["sirmasa logo gray only logo.svg","wizard/helpers.ts","wizard/Step.tsx","wizard/Wizard.tsx","ProposalBuilder/proposal_wizard/step-names.ts","ProposalBuilder/steps/components/TextOption.tsx","config.js","ProposalBuilder/steps/GreetingStep.tsx","ProposalBuilder/proposal_wizard/steps/greeting.tsx","ProposalBuilder/steps/QuestionStep.tsx","ProposalBuilder/proposal_wizard/steps/question.tsx","utils.ts","ProposalBuilder/steps/ConfidenceStep.tsx","ProposalBuilder/proposal_wizard/steps/confidence.tsx","ProposalBuilder/steps/SkillsStep.tsx","ProposalBuilder/proposal_wizard/steps/skills.tsx","ProposalBuilder/steps/ThanksStep.tsx","ProposalBuilder/proposal_wizard/steps/thanks.tsx","ProposalBuilder/steps/FinishStep.tsx","ProposalBuilder/proposal_wizard/steps/finish.tsx","ProposalBuilder/steps/RoleStep.tsx","ProposalBuilder/proposal_wizard/steps/role.tsx","ProposalBuilder/proposal_wizard/repair_wizard_config.tsx","ProposalBuilder/ProposalWizardController.tsx","ProposalBuilder/ProposalBuilder.tsx","serviceWorker.js","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","STATE_MACHINE","Object","freeze","TERMINATE","START","LEFT_TO_RIGHT_STYLES","opacity","left","RIGHT_TO_LEFT_STYLES","TRANSITION_POSITION_STYLES","WebkitTransition","Step","_React$Component","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","transitionTimeoutID","state","inlineStyles","getInitialTransitionStyles","stepIndex","inherits","createClass","key","value","currentStepIndex","arguments","length","undefined","clearTimeout","applyTransition","nextProps","_this2","currStepIndex","incomingStepIndex","setState","_this3","setTimeout","title","react","style","className","children","React","NewWizard","stateMachine","step","data","handlers","prepare","then","preparedData","updateWizardData","objectSpread","selectedData","_this$props","onStepChange","updatedData","nextStep","goNext","finish","newDataFromFinish","updateWizardInfo","onWizardComplete","result","_this$props2","prevStep","goBack","_this$props3","Step_Step","getTitle","getStepIndex","getComponent","onDone","bind","onGoBack","changeStepTitle","renderWizardStep","defaultProps","noop","PROPOSAL_WIZARD_STEP_NAMES","GREETING","QUESTION","CONFIDENCE","ROLE","SKILLS","THANKS","FINISH","useStyles","makeStyles","theme","root","padding","spacing","margin","textAlign","cursor","&:hover","backgroundColor","icon","marginRight","TextOption","_ref","_ref$onClick","onClick","tagLabel","tagColor","classes","Paper","Typography","component","Grid","container","direction","justify","alignItems","item","Chip","label","color","xs","zeroMinWidth","CONFIDENCE_COLORS","SAME_PROJECT","TEACHING","SAME_TECH_STACK","CONFIDENCE_TAGS","confidenceOptions","tags","greetingOptions","questions","ROLES","FRONT_END","FULL_STACK","BACK_END","roles","skills","thanksOptions","GreetingStep","_React$useState","_React$useState2","slicedToArray","name","setName","_React$useState3","_React$useState4","firstLine","setFirstLine","handleChange","event","target","variant","TextField","id","onChange","map","option","replace","concat","greeting","greetingStep","Promise","resolve","_ref2","objectDestructuringEmpty","lastStepIndex","button","QuestionStep","question","Button","size","questionStep","getTagColor","tag","getProposalText","confidence","role","i","join","thanks","textContainer","ConfidenceStep","confidenceStep","defaultValue","reduce","acc","el","defineProperty","SkillsStep","getDefaultValue","FormControlLabel","control","Checkbox","checked","keys","filter","find","x","skillsStep","ThanksStep","thanksStep","inputRef","FinishStep","defaultProposal","proposal","setProposal","ref","multiline","fullWidth","select","document","execCommand","blur","finishStep","RoleStep","roleStep","proposalStateMachine","_proposalNavigationSt","getValue","getLabel","getIndex","_ref3","_ref4","_ref5","_ref6","_ref7","_proposalStateMachine","ProposalWizardController","_getPrototypeOf2","_len","args","Array","_key","apply","window","scrollTo","sm","Wizard_NewWizard","startAt","externalData","Hidden","xsDown","fontFamily","whiteSpace","ProposalBuilder","Container","maxWidth","ProposalWizardController_ProposalWizardController","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","a","createElement","align","gutterBottom","Link","href","rel","alt","src","siramaLogo","Date","getFullYear","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c8832a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sirmasa logo gray only logo.977ee1af.svg\";","import { IUrlResolver } from './models';\nimport { defaultResolver } from './resolver';\n\nexport const STATE_MACHINE = Object.freeze({\n\tTERMINATE: 'TERMINATE',\n\tSTART:     'START'\n});\n\nexport function chainStateMachines(\n\tbaseStateMachine: any,\n\textensionStateMachine: any,\n\t{ lastStep, startStep }: { lastStep: any, startStep: any }\n) {\n\tconst gluedBaseStateMachine = {\n\t\t...baseStateMachine,\n\t\t[lastStep.name]: {\n\t\t\t...baseStateMachine[lastStep.name],\n\t\t\tgoNext(data: any) {\n\t\t\t\treturn baseStateMachine[lastStep.name].goNext(data) === STATE_MACHINE.TERMINATE\n\t\t\t\t\t? startStep.goNext(data)\n\t\t\t\t\t: baseStateMachine[lastStep.name].goNext(data)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst gluedExtensionStateMachine = {\n\t\t...extensionStateMachine,\n\t\t[startStep.name]: {\n\t\t\t...extensionStateMachine[startStep.name],\n\t\t\tgoBack(data: any) {\n\t\t\t\treturn extensionStateMachine[startStep.name].goBack(data) === STATE_MACHINE.START\n\t\t\t\t\t? lastStep.goBack(data)\n\t\t\t\t\t: extensionStateMachine[startStep.name].goBack(data)\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\t...gluedBaseStateMachine,\n\t\t...gluedExtensionStateMachine\n\t}\n}\n\nexport function chainResolvers(baseResolver: IUrlResolver, extensionResolver = defaultResolver): IUrlResolver {\n\n\t// todo: wait untill typescript can work with rest/spread operator properly\n\treturn {\n\t\tgetPathname(...args) {\n\t\t\treturn (baseResolver.getPathname as any)(...args) === STATE_MACHINE.TERMINATE\n\t\t\t\t? (extensionResolver.getPathname as any)(...args)\n\t\t\t\t: (baseResolver.getPathname as any)(...args)\n\t\t},\n\t\tparsePathname(...args) {\n\t\t\treturn (baseResolver.parsePathname as any)(...args).step\n\t\t\t\t? (baseResolver.parsePathname as any)(...args)\n\t\t\t\t: (extensionResolver.parsePathname as any)(...args)\n\t\t}\n\t}\n}\n","import * as React from 'react';\n// import { addComponentCSS } from '@utils/css_styler';\n// import {renderDefined} from '@utils/react_utils';\n\n// addComponentCSS({\n//     //language=CSS\n//     default: `\n//         .wz-step {\n//             position: relative;\n//             margin: 0 auto;\n//             overflow: hidden;\n//         }\n\n//         .wz-step__title {\n//             text-align: center;\n//         }\n//     `\n// });\n\n// CSS to position element towards the left of the screen (-20%)\nconst LEFT_TO_RIGHT_STYLES: React.CSSProperties = {\n    opacity: 0,\n    left: '0'\n};\n\n// CSS to position element towards the right of the screen (+20%)\nconst RIGHT_TO_LEFT_STYLES: React.CSSProperties = {\n    opacity: 0,\n    left: '20%'\n};\n\n// CSS styles to animate element from position (-20%|+20%) to position 0 (center)\nconst TRANSITION_POSITION_STYLES: React.CSSProperties = {\n    opacity: 1,\n    left: 0,\n    WebkitTransition: 'all 0.15s ease-in-out',\n};\n\nexport interface IStepProps {\n    stepIndex: number   // Step index in which this step is rendered in the Wizard.\n                        // Useful for applying CSS transition classes\n    title?   : string   // Component title (if any)\n}\n\n/**\n * Step Component\n *\n * The step component is responsible for rendering the step title\n * and the component defined in its configuration\n */\nexport class Step extends React.Component<IStepProps, any> {\n\n    // Save reference to transition timeout ID such that it can be\n    // cleansed when component is unmounted\n    transitionTimeoutID: any = -1;\n\n    /**\n     * Determine what initial styles should the element have in order to apply\n     * correct transition direction afterwards\n     * @param {currentStepIndex} number - Current step index being rendered\n     * @param {incomingStepIndex} number - Step index to be rendered next\n     * @returns {React.CSSProperties}\n     */\n    static getInitialTransitionStyles(currentStepIndex: number, incomingStepIndex: number = 0): React.CSSProperties {\n        return incomingStepIndex < currentStepIndex ? LEFT_TO_RIGHT_STYLES : RIGHT_TO_LEFT_STYLES;\n    }\n\n    public constructor(props: IStepProps, context?: any) {\n        super(props, context);\n        this.state = {\n            inlineStyles: Step.getInitialTransitionStyles(props.stepIndex)\n        };\n    }\n\n    public componentWillUnmount(): void {\n        // Clear transition timeout to avoid setting state after component has been unmounted\n        clearTimeout(this.transitionTimeoutID);\n    }\n\n    // Apply transition as soon as this component is mounted\n    public componentDidMount(): void {\n        this.applyTransition();\n    }\n\n    // Apply transition after this component has received new props\n    public componentWillReceiveProps(nextProps: IStepProps): void {\n        const currStepIndex: number = this.props.stepIndex;\n        const incomingStepIndex: number = nextProps.stepIndex;\n        if (incomingStepIndex !==  currStepIndex) {\n            this.setState({\n                inlineStyles: Step.getInitialTransitionStyles(currStepIndex, incomingStepIndex)\n            }, () => this.applyTransition());\n        }\n    }\n\n    // Applies transition CSS styles to component to produce sliding effect\n    private applyTransition(): void {\n        // Delay state change such that previous state change has time to render\n        // and the CSS animation can take effect\n        this.transitionTimeoutID = setTimeout(() => {\n            this.setState({ inlineStyles: TRANSITION_POSITION_STYLES });\n        }, 1);\n    }\n\n    public render(): JSX.Element {\n        const {title} = this.props;\n        const {inlineStyles} = this.state;\n        return(\n            <div style={inlineStyles} className=\"wz-step\">\n                {\n                    title &&\n                    <h2 className=\"wz-step__title\">\n                        {title}\n                    </h2>\n                }\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// import { addComponentCSS } from '@utils/css_styler'\nimport { noop } from 'lodash'\nimport * as React from 'react'\n// import { connect } from 'react-redux'\n\nimport { STATE_MACHINE } from './helpers'\nimport { Step } from './Step'\n\n// addComponentCSS({\n//     //language=CSS\n//     default: `\n//         .pz-wizard {\n//             min-width: 280px;\n//             overflow: hidden; /* Avoid component horizontal overflow on step slide animation */\n//         }\n\n//         .pz-wizard__navigate-back {\n//             text-align: center;\n//             display: block;\n//             margin: 10px 0;\n//             text-decoration: none;\n//             cursor: pointer;\n//         }\n\n//         .pz-wizard .wz-step__title {\n//             font-size: 18px;\n//             font-weight: 500;\n//             line-height: 22px;\n//             color: #2F2B64; color: var(--color-primary);\n//             margin: 20px 0 30px 0;\n//         }\n\n//         .pz-wizard .wz-option {\n//             border-color: #A8A5BE;\n//         }\n//     `,\n//     //language=CSS\n//     smMin: `\n//         .pz-wizard .wz-step__title {\n//             font-size: 26px;\n//             line-height: 35px;\n//             color: #2F2B64; color: var(--color-primary);\n//             margin: 60px 0;\n//             font-weight: 600;\n//         }\n//     `\n// });\n\ninterface IWizardProps {\n    name:               string // wizard name. used to get info from redux if needed\n\n    externalData?:      Object // data for wizard prepopulation or external data from other stores\n    handlers?:          Object // handler functions\n\n    step:        string // step from react router params\n    startAt:     string // config to the wizard know which step should be default\n\n    stateMachine: any   // all state transition logic,\n                        // which component to render,\n                        // what to preload before next step and\n                        // which info is relevant from the global wizard data\n\n    data: {step: string, data: any}\n\n    getDataFromState?: (state: any) => Object\n\n    updateWizardInfo: (step: string, data: any, params?: {shouldUpdateUrl?: boolean}) => void // call to redux for storing most recent wizard step\n    updateWizardData: (data: any) => void\n    onWizardComplete: (data: any) => void // something that should be done after wizard complete.\n                                           // should be used only for actions that should be done with assumption that this wizard is the last in the chain\n                                           // if you expect the wizard to be the part of bigger wizard => put specific action into the last step of the state machineResolver\n    changeStepTitle?: (title: string | JSX.Element) => void\n    onStepChange:    (step: string) => void\n}\n\ninterface IWizardState {\n}\n\n/**\n *\n * Removes double slashes in pathname. Starting urls can ends with slash, thus getPathname can\n * return invalid pathname with double shashes\n *\n */\nexport function fixPathname(pathname: string) {\n\treturn pathname.replace('//', '/')\n}\n\n/**\n * Wizard Component\n *\n * Wizard component is responsible for rendering the navigation, slider and the step\n */\nexport class NewWizard extends React.Component<IWizardProps, IWizardState> {\n\n    static defaultProps: Partial<IWizardProps> = {\n        onWizardComplete: noop,\n        changeStepTitle:  noop,\n        onStepChange:     noop,\n    };\n\n    constructor(props: IWizardProps, state: IWizardState) {\n        super(props, state);\n        const { stateMachine, step, data, handlers } = props;\n        stateMachine[step].prepare(data, handlers)\n            .then((preparedData: any) => {\n                this.props.updateWizardData({\n                    ...data,\n                    ...preparedData\n                })\n            })\n    }\n\n    /**\n     * Update state with data selected by user\n     *\n     * @param {Object} [selectedData]\n     * @memberof NewWizard\n     */\n    public onDone(selectedData?: any): void {\n        const { stateMachine, handlers, step, onStepChange } = this.props;\n        const updatedData = {\n            ...this.props.data,\n            ...selectedData\n        }\n        const nextStep = stateMachine[step].goNext(updatedData);\n        if (nextStep !== STATE_MACHINE.TERMINATE) {\n            stateMachine[step].finish(updatedData, handlers)\n                .then((newDataFromFinish: any) => {\n                    return stateMachine[nextStep].prepare({...updatedData, ...newDataFromFinish}, handlers)\n                        .then((preparedData: any) => {\n                            this.props.updateWizardInfo(nextStep, {\n                                ...updatedData,\n                                ...newDataFromFinish,\n                                ...preparedData\n                            })\n                        })\n                })\n        } else {\n            this.props.onWizardComplete(selectedData.result)\n        }\n\n        onStepChange(step);\n    }\n\n    private onGoBack() {\n        const { data, stateMachine, step, } = this.props;\n        const prevStep = stateMachine[step].goBack(data)\n\n        if (prevStep !== STATE_MACHINE.START) {\n            this.props.updateWizardInfo(prevStep, data)\n        }\n    }\n\n    /**\n     * Renders the specified step component. Because the step data fetching is asynchronous,\n     * it might render a temporary 'loading...' message if the fetch takes too long.\n     * @param step string - Zero based index of the step component to render\n     */\n    private renderWizardStep(step: string): JSX.Element {\n        const { data, stateMachine, handlers } = this.props\n        return (\n            <Step\n                title={stateMachine[step].getTitle(data)}\n                stepIndex={stateMachine[step].getStepIndex(0)}\n            >\n                {stateMachine[step].getComponent(\n                    data, {\n                        ...handlers,\n                        onDone:          this.onDone.bind(this),\n                        onGoBack:        this.onGoBack.bind(this),\n                        changeStepTitle: this.props.changeStepTitle\n                    }\n                )}\n            </Step>\n        )\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"pz-wizard\">\n                {this.renderWizardStep(this.props.step)}\n            </div>\n        );\n    }\n}\n\n// function mapStateToProps(state: any, ownProps: any): any {\n//     if (state.wizardStore === undefined) {\n//         console.warn('There is no wizard store available. Please check it out')\n//     }\n//     return {\n//         data: {\n//             // Note: Need to be merged in the following order (externalDta first) so the user that the details step\n//             // provides doesn't get overwritten by external data user\n//             ...ownProps.externalData,\n//             ...(ownProps.getDataFromState || (state => ({})))(state),\n//             ...get(state, x => x.wizardStore[ownProps.name].data, {}),\n//         },\n//         step: get(state, x => x.wizardStore[ownProps.name].step, ownProps.startAt)\n//     }\n// }\n\n// function mapDispatchToProps(dispatch, ownProps: any): any {\n//     return {\n//         updateWizardInfo: (step, data, { shouldUpdateUrl = true } = { shouldUpdateUrl: true }) => {\n//             return dispatch(updateWizardCurrentStep({\n//                 step,\n//                 data,\n//                 wizard: ownProps.name,\n//                 shouldUpdateUrl\n//             }))\n//         },\n\n//         updateWizardData: data => {\n//             return dispatch(updateWizardData({\n//                 data,\n//                 wizard: ownProps.name\n//             }))\n//         }\n//     }\n// }\n\n// export const NewWizardFromStore = connect(\n//     mapStateToProps, mapDispatchToProps\n// )(NewWizard);\n","export const PROPOSAL_WIZARD_STEP_NAMES = Object.freeze({\n    GREETING: 'greeting',\n    QUESTION: 'question',\n    CONFIDENCE: 'confidence',\n    ROLE: 'role',\n    SKILLS: 'skills',\n    THANKS: 'thanks',\n    FINISH: 'finish'\n})\n","import { Chip, Grid, Paper, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { noop } from 'lodash'\nimport * as React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tpadding: theme.spacing(3, 2),\n\t\tmargin: theme.spacing(3, 2),\n\t\ttextAlign: 'left',\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#eee',\n\t\t}\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(2)\n\t}\n}));\n\ninterface IProps {\n\tvalue?: string,\n\tchildren?: React.ReactNode\n\tonClick?: any,\n\ttagLabel?: string,\n\ttagColor?: string\n}\n\nexport function TextOption({ value, onClick = noop, children, tagLabel, tagColor }: IProps) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Paper\n\t\t\tclassName={classes.root}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t{\n\t\t\t\tchildren ||\n\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttagLabel &&\n\t\t\t\t\t\t\t\t<Chip label={tagLabel} color=\"primary\" style={{backgroundColor: tagColor}} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs zeroMinWidth>\n\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Typography>\n\t\t\t}\n\t\t</Paper>\n\t)\n}","export const CONFIDENCE_COLORS = {\n\tSAME_PROJECT:    '#ff3a3a',\n\tTEACHING:        '#231f90',\n\tSAME_TECH_STACK: '#366912'\n}\n\nexport const CONFIDENCE_TAGS = {\n\tSAME_PROJECT:    'Same project',\n\tTEACHING:        'Teaching',\n\tSAME_TECH_STACK: 'Same stack'\n}\n\nexport const confidenceOptions = [\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'TODO: Needless to say but you can also see my Upwork profile for the feedback about XYZ jobs.'\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'TODO: Something about how I see this project being completed, my approaches; Some steps I would like to propose in order to finish this project'\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'I have delt with similar project in the past quite successfuly, which gives me confidence to say that you will receive hight quality work by hiring me'\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'TODO: What you’ll receive:'\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'For more on my skill and successfully finished jobs, please have a look at my Profile, Portfolio, Work History, and Feedback.'\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: 'I have a lot of experience working with React and Redux. My Upwork history proves that I have great technical and communication skills.',\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: \"I know how to create single-page web apps from scratch. During the numerous projects I delivered, I have proven to be a good communicator and a great technical expert. You will have a fast, easy to maintain codebase if you hire me. My Upwork profile can be used as a reference.\",\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: \"I think I will be the best fit for this project because I know how to create complex web applications with React. You will get a fast, easy to maintain codebase as a result of my work. If you will hire me - you will have a reliable developer that can be trusted. Feedback in my working history proves my words.\",\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_PROJECT],\n\t\tvalue: \"TODO: I recently implemented that with another client\"\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_TECH_STACK],\n\t\tvalue: \"I think I will be the best fit for this project because I'm using the same technology stack as you described. I have a lot of experience developing sites from scratch and delivering solid, fast web applications in time. I'm easy to work with, as you can see from my project's history on Upwork.\",\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.SAME_TECH_STACK],\n\t\tvalue: \"I'm sure that I will be the best fit for this project. I'm using the same approaches and technologies as you need and I'm easy to communicate with. You will have information on tasks progress and any issues that I could experience during the development process.\"\n\t},\n\t{\n\t\ttags: [CONFIDENCE_TAGS.TEACHING],\n\t\tvalue: \"I have previous experience teaching other people front-end development using React.js. Currently, I have a client who is a back-end developer who wants to learn front-end development. I'm sure it won't take a long time for me to help you with your issues. My Upwork history proves the level of my expertise.\",\n\t}\n]\n\nexport const greetingOptions = [\n\t'Hi[name]!',\n\t'Hello[name]!',\n\t'Greetings[name]!',\n\t'Dear[name]!',\n\t'TODO: in case of invite: Thanks for job invite. It\\'s a pleasure to meet you',\n\t'TODO: in case of invite: Thank you for your invitation.',\n\t'Hey there, I see you’re looking for somebody to create a highly-converting landing page…'\n]\n\nexport const questions = [\n\t'The job posting does not describe the specifics. Could you provide more details about the project requirements?',\n\t'I have found this job posting quite interesting. I would like to know more about it. Do you have a written description for project requirements?',\n\t'Seems like I would need to get some data from your side. Do you have an API I could connect to?',\n\t'It would be nice to get a deeper understanding on how things work in your system. Do you have wireframes/demo page of your project?',\n\t'Could I take a look at the current state of the application? It will be much easier to catch up on the development progress this way.',\n\t'Does your application have UI/UX design at this stage?',\n\t'Could you tell me more about your application? Is there any documentation that I could reffer to?',\n\t'Do you have a website so I can understand this more?',\n\t'Can you send me a link to your site?'\n]\n\nexport const ROLES = {\n\tFRONT_END: 'front-end',\n\tFULL_STACK: 'full-stack',\n\tBACK_END: 'back-end'\n}\n\nexport const roles = [\n\t{\n\t\tvalue: ROLES.FRONT_END\n\t},\n\t{\n\t\tvalue: ROLES.FULL_STACK\n\t},\n\t{\n\t\tvalue: ROLES.BACK_END\n\t}\n]\n\nexport const skills = [\n\t{\n\t\tvalue: 'node',\n\t\tlabel: 'Node.js'\n\t},\n\t{\n\t\tvalue: 'express',\n\t\tlabel: 'express.js'\n\t},\n\t{\n\t\tvalue: 'mongodb',\n\t\tlabel: 'MongoDB'\n\t},\n\t{\n\t\tvalue: 'passport',\n\t\tlabel: 'passport.js'\n\t},\n\t{\n\t\tvalue: 'socket.io',\n\t\tlabel: 'socket.io'\n\t},\n\t{\n\t\tvalue: 'react',\n\t\tlabel: 'React'\n\t},\n\t{\n\t\tvalue: 'redux',\n\t\tlabel: 'Redux'\n\t},\n\t{\n\t\tvalue: 'gatsby',\n\t\tlabel: 'Gatsby'\n\t},\n\t{\n\t\tvalue: 'SASS/SCSS, LESS',\n\t\tlabel: 'LESS, SASS/SCSS preprocessors for CSS'\n\t},\n\t{\n\t\tvalue: 'babel',\n\t\tlabel: 'Babel for transpiring of ES6+ JavaScript code'\n\t},\n\t{\n\t\tvalue: 'typescript',\n\t\tlabel: 'TypeScript for JavaScript with types'\n\t},\n\t{\n\t\tvalue: 'webpack',\n\t\tlabel: 'Webpack for bundling my code'\n\t},\n\t{\n\t\tvalue: 'git',\n\t\tlabel: 'git as a version control system'\n\t},\n\t{\n\t\tvalue: 'immutable',\n\t\tlabel: 'Immutable.js'\n\t},\n\t{\n\t\tvalue: 'jquery',\n\t\tlabel: 'jQuery'\n\t},\n\t{\n\t\tvalue: 'bootstrap',\n\t\tlabel: 'Bootstrap'\n\t},\n\t{\n\t\tvalue: 'plotly',\n\t\tlabel: 'Plotly plotting library'\n\t},\n\t{\n\t\tvalue: 'datatables',\n\t\tlabel: 'Datatables table data visualization and manipulation library'\n\t}\n]\n\nexport const thanksOptions = [\n\t'Thank you for your time.',\n\t'Please let me know if you have any questions.',\n\t'Looking forward for your questions.',\n\t// TODO: needs paraphrasing\n\t'I can start your project immediately and look forward to working with you.',\n\t'I can start your project immediately and let me know if you would like to discuss anything further with me.',\n\t'P.S. – the proposed cost is an estimate. I could give you an exact figure, timeframe and what I expect to be able to accomplish if we talk. If any of the above sounds interesting, reply to this and we’ll set up a time to talk this week.',\n\t'If you want to collaborate with me let’s discuss it in more detail over the chat.',\n\t'If the above offer sounds like something you would be interested in, I’d love to hear from you.',\n\t'Send me a quick message and we can figure out if we are a good fit to work together!',\n\t'I am free today to discuss details if you are interested.',\n\t'I’ll look forward to hearing from you for further process.',\n\t'Thank you for your consideration',\n\t'I am waiting to be hired in this project to show my skills.',\n\t'TODO: I am available for an interview Monday to Friday 10 am to 12pm (UTC + 10:00 timezone). I look forward to having the opportunity to discuss the job further.',\n\t'Let me know if you would like to discuss things further with me.',\n\t'Best regards,',\n\t'Regards,',\n\t'Kind regards,'\n]\n\n// You may find my quote a little higher than what most people here would charge. The reason is simple: I am not desperate to generate quick bucks here at Upwork but provide a complete technical expertise for my clients.\n// Should you find my proposal inappropriate for your current needs and budget, feel free to move forward and find the best provider for this project. But keep me on your list; you may need me in the future. Please contact me anytime if you need help.\n// I am an individual who personally works for you and not a company where you discuss things with a person who actually is not working on your tasks.","import * as React from 'react'\nimport { Typography, Paper, TextField } from '@material-ui/core';\nimport { TextOption } from './components/TextOption';\nimport { greetingOptions } from '../../config';\n\nexport function GreetingStep({ onDone }: { onDone: any }) {\n\tconst [name, setName] = React.useState('');\n\tconst [firstLine, setFirstLine] = React.useState('')\n\n\tconst handleChange = (event: any) => {\n\t\tswitch(event.target.name) {\n\t\t\tcase 'name': {\n\t\t\t\tsetName(event.target.value);\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'firstLine': {\n\t\t\t\tsetFirstLine(event.target.value)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tGreeting\n\t\t\t</Typography>\n\t\t\t<TextField\n\t\t\t\tid=\"standard-first-line\"\n\t\t\t\tlabel=\"First line\"\n\t\t\t\tname=\"firstLine\"\n\t\t\t\tvalue={firstLine}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tmargin=\"normal\"\n\t\t\t/>\n\t\t\t<br/>\n\t\t\t<TextField\n\t\t\t\tid=\"standard-name\"\n\t\t\t\tlabel=\"Name\"\n\t\t\t\tname=\"name\"\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tmargin=\"normal\"\n\t\t\t/>\n\t\t\t{\n\t\t\t\tgreetingOptions.map(option => {\n\t\t\t\t\tconst value = option\n\t\t\t\t\t\t.replace(\"[name]\", name ? ` ${name}` : '')\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextOption\n\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonClick={() => onDone({ greeting: value, firstLine })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t)\n}\n","import * as React from 'react';\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names';\nimport { GreetingStep } from '../../steps/GreetingStep'\nimport { IWizardStep } from '../../../wizard/models';\nimport { STATE_MACHINE } from '../../../wizard/helpers';\n\nexport interface IGreetingStateData {\n}\n\nexport interface IGreetingStateHandlers {\n}\n\nexport const greetingStep: IWizardStep<IGreetingStateData, IGreetingStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({ }, { onDone }) {\n\t\treturn <GreetingStep onDone={onDone}/>\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.QUESTION\n\t},\n\tgoBack(data) {\n\t\treturn STATE_MACHINE.START\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 0;\n\t},\n};\n\n","import * as React from 'react'\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextOption } from './components/TextOption';\nimport { questions } from '../../config';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tpadding: theme.spacing(3, 2),\n\t\tmargin: theme.spacing(3, 2)\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1),\n\t},\n}));\n\nexport function QuestionStep({ onDone, goBack }: { onDone: any, goBack: any }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tQuestion\n\t\t\t</Typography>\n\t\t\t{\n\t\t\t\tquestions.map(question => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextOption\n\t\t\t\t\t\t\tkey={question}\n\t\t\t\t\t\t\tvalue={question}\n\t\t\t\t\t\t\tonClick={() => onDone({ question })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={goBack}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t>\n\t\t\t\tback\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={() => onDone({})}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t>\n\t\t\t\tskip\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import * as React from 'react';\n\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names';\nimport { QuestionStep } from '../../steps/QuestionStep'\nimport { IWizardStep } from '../../../wizard/models';\n\nexport interface IQuestionStateData {\n}\n\nexport interface IQuestionStateHandlers {\n}\n\nexport const questionStep: IWizardStep<IQuestionStateData, IQuestionStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({}, { onDone, onGoBack }) {\n\t\treturn <QuestionStep onDone={onDone} goBack={onGoBack} />\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.CONFIDENCE\n\t},\n\tgoBack(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.GREETING\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 1;\n\t},\n};\n\n","import { CONFIDENCE_TAGS, CONFIDENCE_COLORS } from \"./config\";\n\nexport function getTagColor(tag: string) {\n\tswitch (tag) {\n\t\tcase CONFIDENCE_TAGS.SAME_PROJECT: {\n\t\t\treturn CONFIDENCE_COLORS.SAME_PROJECT\n\t\t}\n\t\tcase CONFIDENCE_TAGS.SAME_TECH_STACK: {\n\t\t\treturn CONFIDENCE_COLORS.SAME_TECH_STACK\n\t\t}\n\t\tcase CONFIDENCE_TAGS.TEACHING: {\n\t\t\treturn CONFIDENCE_COLORS.TEACHING\n\t\t}\n\t}\n}\n\ninterface IProposalData {\n\tfirstLine?: string,\n\tgreeting?: string,\n\tquestion?: string,\n\tconfidence?: string,\n\trole?: string,\n\tskills?: { label: string, value: string }[],\n\tthanks?: string\n}\n\nexport function getProposalText(data: IProposalData) {\n\tlet result = ''\n\tif (data.firstLine) {\n\t\tresult += data.firstLine\n\t\t\t? `${data.firstLine}\\n`\n\t\t\t: ''\n\t}\n\tif (data.greeting) {\n\t\tresult += data.greeting + '\\n\\n'\n\t}\n\tif (data.question) {\n\t\tresult += data.question\n\t\t\t? `${data.question}\\n\\n`\n\t\t\t: ''\n\t}\n\tif (data.confidence) {\n\t\tresult += data.confidence\n\t\t\t+ '\\n\\n'\n\t}\n\tif (data.role) {\n\t\tresult += `I'm a senior ${data.role} engineer and I'm using next technologies:\\n`\n\t}\n\tif (data.skills) {\n\t\tresult += (data.skills ? data.skills.map(({ label }, i) => `- ${label}`).join('\\n') : '') + '\\n\\n'\n\t}\n\tif (data.thanks) {\n\t\tresult += `${data.thanks}\\n\\nIgor Shybyryn`\n\t}\n\treturn result\n}\n","import * as React from 'react'\nimport { Typography, Button, Icon, Grid } from '@material-ui/core';\nimport { TextOption } from './components/TextOption';\nimport { confidenceOptions, CONFIDENCE_COLORS } from '../../config';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getTagColor } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n\ttextContainer: {\n\t\ttextAlign: 'left'\n\t}\n}));\n\nexport function ConfidenceStep({ onDone, goBack }: { onDone: any, goBack: any }) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tConfidence\n\t\t\t</Typography>\n\t\t\t{\n\t\t\t\tconfidenceOptions.map(({ value, tags }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextOption\n\t\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\ttagLabel={tags[0]}\n\t\t\t\t\t\t\ttagColor={getTagColor(tags[0])}\n\t\t\t\t\t\t\tonClick={() => onDone({ confidence: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Button\n\t\t\t\tonClick={goBack}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t>\n\t\t\t\tback\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import * as React from 'react';\n\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names';\nimport { ConfidenceStep } from '../../steps/ConfidenceStep'\nimport { IWizardStep } from '../../../wizard/models';\n\nexport interface IConfidenceStateData {\n}\n\nexport interface IConfidenceStateHandlers {\n}\n\nexport const confidenceStep: IWizardStep<IConfidenceStateData, IConfidenceStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({}, { onDone, onGoBack }) {\n\t\treturn <ConfidenceStep onDone={onDone} goBack={onGoBack} />\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.ROLE\n\t},\n\tgoBack(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.QUESTION\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 2;\n\t},\n};\n\n","import { Button, Checkbox, FormControlLabel, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport { IDictionary } from '../proposal_wizard/repair_wizard_config'\nimport { skills, ROLES } from '../../config';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\ttextAlign: 'left'\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1),\n\t},\n}));\n\nconst defaultValue: IDictionary<boolean> = skills.reduce((acc, el) => {\n\treturn {\n\t\t...acc,\n\t\t[el.value]: false\n\t}\n}, {})\n\nfunction getDefaultValue(role: string) {\n\tswitch(role) {\n\t\tcase ROLES.FRONT_END: {\n\t\t\tdefaultValue['react'] = true\n\t\t\tdefaultValue['redux'] = true\n\t\t\tdefaultValue['SASS/SCSS, LESS'] = true\n\t\t\tbreak\n\t\t}\n\t\tcase ROLES.FULL_STACK: {\n\t\t\tdefaultValue['node'] = true\n\t\t\tdefaultValue['mongodb'] = true\n\t\t\tdefaultValue['express'] = true\n\t\t\tdefaultValue['react'] = true\n\t\t\tdefaultValue['redux'] = true\n\t\t\tdefaultValue['SASS/SCSS, LESS'] = true\n\t\t\tbreak\n\t\t}\n\t\tcase ROLES.BACK_END: {\n\t\t\tdefaultValue['node'] = true\n\t\t\tdefaultValue['mongodb'] = true\n\t\t\tdefaultValue['express'] = true\n\t\t\tbreak\n\t\t}\n\t}\n\n\tdefaultValue['babel'] = true\n\tdefaultValue['typescript'] = true\n\tdefaultValue['webpack'] = true\n\tdefaultValue['git'] = true\n\n\treturn defaultValue\n}\n\nexport function SkillsStep({ onDone, goBack, role }: { onDone: any, goBack: any, role: string }) {\n\tconst classes = useStyles()\n\tconst [state, setState] = React.useState(getDefaultValue(role));\n\n\tconst handleChange = (name: string) => (event: any) => {\n\t\tsetState({ ...state, [name]: event.target.checked });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tSkills\n\t\t\t</Typography>\n\n\t\t\t<div className={classes.root}>\n\t\t\t\t{\n\t\t\t\t\tskills.map(({label, value}) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tchecked={state[value]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange(value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel={value}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<br />\n\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\tonClick={goBack}\n\t\t\t>\n\t\t\t\tBack\n\t\t\t</Button>\n\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => onDone({\n\t\t\t\t\tskills: Object.keys(state)\n\t\t\t\t\t\t.filter(key => state[key])\n\t\t\t\t\t\t.map(key => skills.find(x => x.value === key))\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\n\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names'\nimport { SkillsStep } from '../../steps/SkillsStep'\nimport { IWizardStep } from '../../../wizard/models';\n\nexport interface ISkillsStateData {\n\trole: string\n}\n\nexport interface ISkillsStateHandlers {\n}\n\nexport const skillsStep: IWizardStep<ISkillsStateData, ISkillsStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({ role }, { onDone, onGoBack }) {\n\t\treturn <SkillsStep role={role} onDone={onDone} goBack={onGoBack} />\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext() {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.THANKS\n\t},\n\tgoBack() {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.ROLE\n\t},\n\tgetTitle() {\n\t\treturn ''\n\t},\n\tgetStepIndex() {\n\t\treturn 3;\n\t},\n};\n\n","import * as React from 'react'\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextOption } from './components/TextOption';\nimport { thanksOptions } from '../../config';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tpadding: theme.spacing(3, 2),\n\t\tmargin: theme.spacing(3, 2)\n\t},\n}));\n\nexport function ThanksStep({ onDone, goBack }: { onDone: any, goBack: any }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tThanks\n\t\t\t</Typography>\n\t\t\t{\n\t\t\t\tthanksOptions.map(option => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextOption\n\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\tonClick={() => onDone({ thanks: option })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Button\n\t\t\t\tonClick={goBack}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t>\n\t\t\t\tback\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import * as React from 'react'\n\nimport { ThanksStep } from '../../steps/ThanksStep'\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names'\nimport { IWizardStep } from '../../../wizard/models';\n\nexport interface IThanksStateData {\n}\n\nexport interface IThanksStateHandlers {\n}\n\nexport const thanksStep: IWizardStep<IThanksStateData, IThanksStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({}, { onDone, onGoBack }) {\n\t\treturn <ThanksStep onDone={onDone} goBack={onGoBack} />\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.FINISH\n\t},\n\tgoBack(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.SKILLS\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 3;\n\t},\n};\n\n","import { Typography, TextField, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n\tbutton: {\n\t\tmargin: theme.spacing(1),\n\t},\n}));\n\nlet inputRef: any = null\n\nexport function FinishStep({ onDone, defaultProposal, goBack }: { onDone: any, goBack: any, defaultProposal: string }) {\n\tconst [proposal, setProposal] = React.useState(defaultProposal)\n\n\tfunction handleChange(event: any) {\n\t\tsetProposal(event.target.value)\n\t}\n\n\tfunction copyToClipboard() {\n\t\tif (inputRef) {\n\t\t\tinputRef.select();\n\t\t\tdocument.execCommand(\"copy\")\n\t\t\tinputRef.blur();\n\t\t}\n\t}\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tFinish\n\t\t\t</Typography>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-textarea\"\n\t\t\t\tinputRef={(ref) => inputRef = ref}\n\t\t\t\tvalue={proposal}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tmultiline\n\t\t\t\tfullWidth\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={goBack}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t>\n\t\t\t\tback\n\t\t\t</Button>\n\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={copyToClipboard}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t>\n\t\t\t\tcopy to clipboard\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import * as React from 'react';\n\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names';\nimport { FinishStep } from '../../steps/FinishStep'\nimport { IWizardStep } from '../../../wizard/models';\nimport { STATE_MACHINE } from '../../../wizard/helpers';\nimport { getProposalText } from '../../../utils';\n\nexport interface IFinishStateData {\n\tfirstLine: string,\n\tgreeting: string,\n\tquestion: string,\n\tconfidence: string,\n\trole: string,\n\tskills: { label: string, value: string }[],\n\tthanks: string\n}\n\nexport interface IFinishStateHandlers {\n}\n\nexport const finishStep: IWizardStep<IFinishStateData, IFinishStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent(data, { onDone, onGoBack }) {\n\t\treturn (\n\t\t\t<FinishStep\n\t\t\t\tonDone={onDone}\n\t\t\t\tgoBack={onGoBack}\n\t\t\t\tdefaultProposal={getProposalText(data)}\n\t\t\t/>\n\t\t)\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn STATE_MACHINE.TERMINATE\n\t},\n\tgoBack(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.THANKS\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 3;\n\t},\n};\n\n","import * as React from 'react'\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextOption } from './components/TextOption';\nimport { roles } from '../../config';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tpadding: theme.spacing(3, 2),\n\t\tmargin: theme.spacing(3, 2)\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1),\n\t},\n}));\n\nexport function RoleStep({ onDone, goBack }: { onDone: any, goBack: any }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h5\" component=\"h3\">\n\t\t\t\tRole\n\t\t\t</Typography>\n\t\t\t{\n\t\t\t\troles.map(({ value }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TextOption\n\t\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonClick={() => onDone({ role: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={goBack}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"default\"\n\t\t\t>\n\t\t\t\tback\n\t\t\t</Button>\n\t\t\t{/* <Button\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={() => onDone({})}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t>\n\t\t\t\tskip\n\t\t\t</Button> */}\n\t\t</div>\n\t)\n}\n","import * as React from 'react';\n\nimport { PROPOSAL_WIZARD_STEP_NAMES } from '../step-names';\nimport { RoleStep } from '../../steps/RoleStep'\nimport { IWizardStep } from '../../../wizard/models';\n\nexport interface IRoleStateData {\n}\n\nexport interface IRoleStateHandlers {\n}\n\nexport const roleStep: IWizardStep<IRoleStateData, IRoleStateHandlers> = {\n\tprepare() {\n\t\treturn Promise.resolve({})\n\t},\n\tgetComponent({}, { onDone, onGoBack }) {\n\t\treturn <RoleStep onDone={onDone} goBack={onGoBack} />\n\t},\n\tfinish() {\n\t\treturn Promise.resolve({})\n\t},\n\tgoNext(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.SKILLS\n\t},\n\tgoBack(data) {\n\t\treturn PROPOSAL_WIZARD_STEP_NAMES.CONFIDENCE\n\t},\n\tgetTitle(data) {\n\t\treturn ''\n\t},\n\tgetStepIndex(lastStepIndex) {\n\t\treturn 1;\n\t},\n};\n\n","import { PROPOSAL_WIZARD_STEP_NAMES } from './step-names';\nimport { greetingStep } from './steps/greeting';\nimport { questionStep } from './steps/question';\nimport { confidenceStep } from './steps/confidence';\nimport { skillsStep } from './steps/skills';\nimport { thanksStep } from './steps/thanks';\nimport { finishStep } from './steps/finish';\nimport { IWizardStep } from '../../wizard/models';\nimport { roleStep } from './steps/role';\n\nexport interface IDictionary<T> {\n    [key: string]: T\n}\n\nexport const proposalNavigationSteps = {\n    [PROPOSAL_WIZARD_STEP_NAMES.GREETING]: {\n        getValue: ({}) => 'GREETING',\n        getLabel: () => 'GREETING',\n        getIndex: () => 0\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.QUESTION]: {\n        getValue: ({}) => 'QUESTION',\n        getLabel: () => 'QUESTION',\n        getIndex: () => 1\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.CONFIDENCE]: {\n        getValue: ({}) => 'CONFIDENCE',\n        getLabel: () => 'CONFIDENCE',\n        getIndex: () => 2\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.ROLE]: {\n        getValue: ({}) => 'ROLE',\n        getLabel: () => 'ROLE',\n        getIndex: () => 3\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.SKILLS]: {\n        getValue: ({  }) => 'SKILLS',\n        getLabel: () => 'SKILLS',\n        getIndex: () => 4\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.THANKS]: {\n        getValue: ({  }) => 'THANKS',\n        getLabel: () => 'THANKS',\n        getIndex: () => 5\n    },\n    [PROPOSAL_WIZARD_STEP_NAMES.FINISH]: {\n        getValue: ({  }) => 'FINISH',\n        getLabel: () => 'FINISH',\n        getIndex: () => 6\n    }\n}\n\nexport const proposalStateMachine: IDictionary<IWizardStep<any, any>> = {\n    [PROPOSAL_WIZARD_STEP_NAMES.GREETING]:   greetingStep,\n    [PROPOSAL_WIZARD_STEP_NAMES.QUESTION]:   questionStep    ,\n    [PROPOSAL_WIZARD_STEP_NAMES.CONFIDENCE]: confidenceStep,\n    [PROPOSAL_WIZARD_STEP_NAMES.ROLE]:       roleStep,\n    [PROPOSAL_WIZARD_STEP_NAMES.SKILLS]:     skillsStep,\n    [PROPOSAL_WIZARD_STEP_NAMES.THANKS]:     thanksStep,\n    [PROPOSAL_WIZARD_STEP_NAMES.FINISH]:     finishStep,\n}\n","// import { addComponentCSS } from '@utils/css_styler'\nimport { Grid, Typography, Hidden } from '@material-ui/core'\nimport { noop } from 'lodash'\nimport * as React from 'react'\n\nimport { NewWizard } from '../wizard/Wizard'\nimport { proposalStateMachine } from './proposal_wizard/repair_wizard_config'\nimport { PROPOSAL_WIZARD_STEP_NAMES } from './proposal_wizard/step-names'\nimport { TextOption } from './steps/components/TextOption'\nimport { getProposalText } from '../utils';\n\ninterface IProps {\n}\n\ninterface IState {\n}\n\nexport class ProposalWizardController extends React.Component<IProps, IState> {\n    static defaultProps: Partial<IProps> = {\n        onStepChange: noop\n    };\n\n    state: any = {\n        step: PROPOSAL_WIZARD_STEP_NAMES.GREETING,\n        data: {}\n    }\n\n    onStepChange() {\n        window.scrollTo(0, 0);\n    }\n\n    updateWizardData = (data: any) => {\n        this.setState({\n            data: {\n                ...this.state.data,\n                ...data\n            }\n        })\n    }\n\n    updateWizardInfo = (step: string, data: any) => {\n        this.setState({\n            step,\n            data: {\n                ...this.state.data,\n                ...data\n            }\n        })\n    }\n\n    public render(): JSX.Element {\n        const externalData = {\n        };\n\n        const handlers = {\n        };\n\n        return (\n            <div className=\"pt-repair-wizard-controller\">\n                <Grid container spacing={3}>\n                    <Grid item sm={7} xs={12}>\n                        <NewWizard\n                            name={'repair'}\n                            stateMachine={proposalStateMachine}\n                            startAt={PROPOSAL_WIZARD_STEP_NAMES.GREETING}\n                            step={this.state.step}\n                            data={this.state.data}\n                            updateWizardData={this.updateWizardData}\n                            updateWizardInfo={this.updateWizardInfo}\n                            externalData={externalData}\n                            handlers={handlers}\n                            onStepChange={this.onStepChange}\n                        />\n                    </Grid>\n                    <Hidden xsDown>\n                        <Grid item sm={5}>\n                            <Typography variant=\"h5\" component=\"h3\">\n                                Preview\n                            </Typography>\n                            <TextOption>\n                                <Typography component=\"p\">\n                                    <pre style={{\n                                        fontFamily: 'inherit',\n                                        whiteSpace: 'pre-wrap'\n                                    }}>\n                                        {getProposalText(this.state.data)}\n                                    </pre>\n                                </Typography>\n                            </TextOption>\n                        </Grid>\n                    </Hidden>\n                </Grid>\n            </div>\n        );\n    }\n}\n","import * as React from 'react'\nimport { ProposalWizardController } from './ProposalWizardController';\nimport { Container } from '@material-ui/core';\n\nexport function ProposalBuilder() {\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<ProposalWizardController />\n\t\t</Container>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { ProposalBuilder } from '../src/ProposalBuilder/ProposalBuilder'\nimport './App.scss';\nimport siramaLogo from './sirmasa logo gray only logo.svg'\nimport { Link, Typography } from '@material-ui/core';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <Typography align=\"center\" variant=\"h2\" component=\"h1\" gutterBottom>\n          Proposal builder\n        </Typography>\n        <ProposalBuilder />\n      </div>\n      <footer className=\"footer\">\n        <Link\n          className=\"footer__logo\"\n          color=\"inherit\"\n          href=\"https://siramasa.top\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img\n            className=\"footer__logo-image\"\n            alt=\"SiraMasa logo\"\n            src={siramaLogo}\n          />\n        </Link>\n        <span className=\"footer__copyright\">\n          © {new Date().getFullYear()} proposal builder, by&nbsp;\n          <Link color=\"inherit\" href=\"https://siramasa.top\" target=\"_blank\" rel=\"noreferrer\">\n            SiraMasa\n          </Link>\n        </span>\n      </footer>\n    </div>\n  );\n}\n\n"],"sourceRoot":""}